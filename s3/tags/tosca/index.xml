<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tosca on Unladen swallow</title>
    <link>https://blog.owulveryck.info/tags/tosca.html</link>
    <description>Recent content in Tosca on Unladen swallow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2015/2017</copyright>
    <lastBuildDate>Wed, 10 Feb 2016 17:19:47 +0100</lastBuildDate>
    
	<atom:link href="https://blog.owulveryck.info/tags/tosca/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Configuration management, choreography and self-aware applications</title>
      <link>https://blog.owulveryck.info/2016/02/10/configuration-management-choreography-and-self-aware-applications/index.html.html</link>
      <pubDate>Wed, 10 Feb 2016 17:19:47 +0100</pubDate>
      
      <guid>https://blog.owulveryck.info/2016/02/10/configuration-management-choreography-and-self-aware-applications/index.html.html</guid>
      <description>Thanks to the company I&amp;rsquo;m working for (Techsys) I&amp;rsquo;ve had the opportunity to attend the configuration management camp in Gent (be) for its 2016 edition.
I really enjoyed those two days of talks, watching people present different ideas of a possible future for the infrastructure and deployment engineering. Beyond the technical demonstrations and the experience sharing, I&amp;rsquo;ve spotted a bunch of ideas
Among all, those that comes to me spontaneously are:</description>
    </item>
    
    <item>
      <title>TOSCA lifecycle as a digraph</title>
      <link>https://blog.owulveryck.info/2015/11/20/tosca-lifecycle-as-a-digraph/index.html.html</link>
      <pubDate>Fri, 20 Nov 2015 10:09:30 +0000</pubDate>
      
      <guid>https://blog.owulveryck.info/2015/11/20/tosca-lifecycle-as-a-digraph/index.html.html</guid>
      <description>About TOSCA The TOSCA acronym stands for Topology and Orchestration Specification for Cloud Applications. It&amp;rsquo;s an OASIS standard.
The purpose of the TOSCA project is to represent an application by its topology and formalize it using the TOSCA grammar.
The [TOSCA-Simple-Profile-YAML-v1.0] current specification in YAML introduces the following concepts.
  TOSCA YAML service template: A YAML document artifact containing a (TOSCA) service template that represents a Cloud application. TOSCA processor: An engine or tool that is capable of parsing and interpreting a TOSCA YAML service template for a particular purpose.</description>
    </item>
    
  </channel>
</rss>