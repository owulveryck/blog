<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lisp on Unladen swallow</title>
    <link>https://blog.owulveryck.info/tags/lisp.html</link>
    <description>Recent content in Lisp on Unladen swallow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2015/2017</copyright>
    <lastBuildDate>Tue, 28 Feb 2017 20:57:38 +0100</lastBuildDate>
    
	<atom:link href="https://blog.owulveryck.info/tags/lisp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>To go and touch Linda&#39;s Lisp</title>
      <link>https://blog.owulveryck.info/2017/02/28/to-go-and-touch-lindas-lisp.html</link>
      <pubDate>Tue, 28 Feb 2017 20:57:38 +0100</pubDate>
      
      <guid>https://blog.owulveryck.info/2017/02/28/to-go-and-touch-lindas-lisp.html</guid>
      <description>The title is not a typo nor dyslexia. I will really talk about Lisp.
In a previous post I explained my will to implement the dining of the philosophers with Linda in GO.
The ultimate goal is to use a distributed and abstract language to go straight from the design to the runtime of an application.
The problem I&amp;rsquo;ve faced I want to use a GO implementation for the Linda language because a go binary is a container by itself.</description>
    </item>
    
  </channel>
</rss>